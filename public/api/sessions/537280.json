{
  "id": "537280",
  "title": "Debugging JavaScript and React",
  "speakers": [
    {
      "id": "2bb96866-ad46-4413-a62e-0870ab1abc60",
      "name": "Mark Erikson",
      "photo": "https://sessionize.com/image/900e-400o400o1-Pw1w4p9kFEtQ51oshda83X.jpg",
      "bio": "Mark Erikson is a Senior Front-End Engineer at Replay, and lives in southwest Ohio, USA.  Mark is a Redux maintainer, creator of Redux Toolkit, and general keeper of the Redux docs.  He tweets at @acemarke, and blogs at https://blog.isquaredsoftware.com. He spends much of his time answering questions about React and Redux anywhere there's a comment box on the internet, and usually hangs out in the Reactiflux chat channels.",
      "links": [
        {
          "title": "Twitter",
          "url": "https://twitter.com/acemarke"
        },
        {
          "title": "Blog",
          "url": "https://blog.isquaredsoftware.com"
        },
        {
          "title": "Company Website",
          "url": "https://replay.io"
        }
      ]
    }
  ],
  "room": "Salon D",
  "track": "Web/Front-End",
  "tags": [
    "Javascript",
    "React",
    "Front End"
  ],
  "format": "General Session",
  "level": "Intermediate",
  "day": "Thursday",
  "startTime": "13:00",
  "endTime": "14:00",
  "excerpt": "## Description / Abstract\n\nAs developers, we spend much of our time debugging apps - often code we didn't even write. Sadly, few developers have ever been taught how to approach debugging - it's something most of us learn through painful experience.  The good news is you _can_ learn how to debug...",
  "description": "## Description / Abstract\n\nAs developers, we spend much of our time debugging apps - often code we didn't even write. Sadly, few developers have ever been taught how to approach debugging - it's something most of us learn through painful experience.  The good news is you _can_ learn how to debug effectively, and there's several key techniques and tools you can use for debugging JS and React apps.\n\nIn this talk, we'll look at:\n\n- Core principles and steps for approaching debugging\n- How to use both print logging and GUI debugging tools effectively\n- Specific tips for debugging JS code\n- Approaches and techniques for debugging React components and Redux logic\n\n## Structure / TOC\n\n- How to Approach Debugging\n- Why is debugging important?\n- Core principles and mindset\n- Scientific steps for debugging\n- General tips and techniques\n- Debugging Tools\n- Print logging vs graphical debuggers\n- Print logging techniques\n- GUI debugger concepts and controls\n- GUI debugger techniques\n- Time-travel debugging with Replay\n- Debugging JS\n- Logging methods and console interaction\n- Working with 3rd-party libraries\n- Debugging React and Redux\n- Understanding React's component model, data flow, and common mistakes\n- Using the React DevTools\n- Understanding Redux's data flow and common mistakes\n- Using the Redux DevTools"
}