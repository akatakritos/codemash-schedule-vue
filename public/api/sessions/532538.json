{
  "id": "532538",
  "title": "CQRS with Event Sourcing using the “Critter Stack”",
  "speakers": [
    {
      "id": "cf80d55a-62bf-4be2-a986-27d217129faf",
      "name": "Jeremy Miller",
      "photo": "https://sessionize.com/image/661e-400o400o1-L2UUSV4QsUxHmXUr87AJwX.jpg",
      "bio": "Jeremy Miller started his career as a “real” engineer but wandered into software because that looked like more fun. Since then, Jeremy has worked in and led software development teams in the computer manufacturing industry, finance, insurance, health care, and banking industries. Lately, Jeremy has been focused on leading software architecture teams and helping mentor other software architects. Having had roles both as an in-house software architect and as a software consultant, Jeremy has a great deal of insight into the challenges that confront companies developing and maintaining enterprise systems over time.\n \n Jeremy is well known for his Open-Source Software tools starting with Structure Map and continuing today to Marten and Wolverine. Jeremy is also a frequent author and technical speaker at software conferences. Jeremy recently helped found JasperFx Software to build a sustainable business around the \"Critter Stack\" tools.",
      "links": [
        {
          "title": "Twitter",
          "url": "http://twitter.com/jeremydmiller"
        },
        {
          "title": "LinkedIn",
          "url": "https://www.linkedin.com/in/jeremy-miller-500a3a1/"
        },
        {
          "title": "Blog",
          "url": "https://jeremydmiller.com"
        },
        {
          "title": "Company Website",
          "url": "https://jasperfx.net"
        }
      ]
    }
  ],
  "room": "Salon D",
  "track": "Architecture",
  "tags": [
    ".NET",
    "Databases",
    "Architecture"
  ],
  "format": "General Session",
  "level": "Intermediate",
  "day": "Friday",
  "startTime": "11:00",
  "endTime": "12:00",
  "excerpt": "Do you have a system where you think would be a good fit for a CQRS architecture that also uses Event Sourcing for at least part of its persistence strategy? Are you intimidated by the potential complexity of that kind of approach? \n\nFear not, using a combination of the Postgresql-backed Marten...",
  "description": "Do you have a system where you think would be a good fit for a CQRS architecture that also uses Event Sourcing for at least part of its persistence strategy? Are you intimidated by the potential complexity of that kind of approach?\n\nFear not, using a combination of the Postgresql-backed Marten (https://martendb.io) library for event sourcing and its newer friend Wolverine (https://wolverine.netlify.app) for command handling and asynchronous messaging, I'll show you how you can quickly get started with both CQRS and Event Sourcing. Once we get past the quick start, I'll show you how the Critter Stack's unique approach to the \"Decider\" pattern will help you create robust command handlers with very little code ceremony while still enjoying easy testability.\n\nMoving beyond basic command handling, I'll show you how to reliably subscribe to and publish the events or other messages created by your command handlers through Wolverine's durable outbox and direct subscriptions to Marten's event storage."
}